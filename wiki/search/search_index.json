{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to my Wiki\n\n\nFor full documentation ...",
            "title": "Welcome to my Wiki"
        },
        {
            "location": "/#welcome-to-my-wiki",
            "text": "For full documentation ...",
            "title": "Welcome to my Wiki"
        },
        {
            "location": "/apache/",
            "text": "Apache\n\n\nVirtual Host Example\n\n\n<VirtualHost *:80>\n    ServerName jhonmike.com.br\n    ServerAlias www.jhonmike.com.br\n\n    ServerAdmin developer@jhonmike.com.br\n    DocumentRoot /var/www/jhonmike/public\n    <Directory /var/www/jhonmike/public>\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Require all granted\n    </Directory>\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>\n\n\n\n\nApache > 2.4 using \nRequire all granted\n instead of:\n\n\nOrder allow,deny\nAllow from all\n\n\n\n\nAtivando Virtual Host\n\n\nArch\n\n\nDescomente \n/etc/httpd/conf/extra/httpd-vhosts.conf\n do arquivo \n/etc/httpd/conf/httpd.conf\n e adicione seus vhosts l\u00e1.\n\n\nUbuntu\n\n\na2ensite /etc/apache2/sites-available/jhonmike.com.br.conf\n\n\n\n\nModRewrite\n\n\nArch\n\n\nDescomente \nLoadModule rewrite_module modules/mod_rewrite.so\n do arquivo \n/etc/httpd/conf/httpd.conf\n e restart o servi\u00e7o \nhttpd\n\n\nUbuntu\n\n\nPara habilitar o m\u00f3dulo no Apache basta esta linha:\n\n\na2enmod rewrite\n\n\n\n\nAgora abra o arquivo de configura\u00e7\u00e3o:\n\n\nvim  /etc/apache2/sites-available/default\n\n\n\n\nProcure no seu arquivo a entrada \"AllowOverride None\"\nAltere esse valor para \"AllowOverride All\" .\nSalve o arquivo e reinicie o Apache.\n\n\n/etc/init.d/apache2 restart\nor\nservice apache2 restart",
            "title": "Apache"
        },
        {
            "location": "/apache/#apache",
            "text": "",
            "title": "Apache"
        },
        {
            "location": "/apache/#virtual-host-example",
            "text": "<VirtualHost *:80>\n    ServerName jhonmike.com.br\n    ServerAlias www.jhonmike.com.br\n\n    ServerAdmin developer@jhonmike.com.br\n    DocumentRoot /var/www/jhonmike/public\n    <Directory /var/www/jhonmike/public>\n        Options Indexes FollowSymLinks\n        AllowOverride All\n        Require all granted\n    </Directory>\n\n    ErrorLog ${APACHE_LOG_DIR}/error.log\n    CustomLog ${APACHE_LOG_DIR}/access.log combined\n</VirtualHost>  Apache > 2.4 using  Require all granted  instead of:  Order allow,deny\nAllow from all",
            "title": "Virtual Host Example"
        },
        {
            "location": "/apache/#ativando-virtual-host",
            "text": "",
            "title": "Ativando Virtual Host"
        },
        {
            "location": "/apache/#arch",
            "text": "Descomente  /etc/httpd/conf/extra/httpd-vhosts.conf  do arquivo  /etc/httpd/conf/httpd.conf  e adicione seus vhosts l\u00e1.",
            "title": "Arch"
        },
        {
            "location": "/apache/#ubuntu",
            "text": "a2ensite /etc/apache2/sites-available/jhonmike.com.br.conf",
            "title": "Ubuntu"
        },
        {
            "location": "/apache/#modrewrite",
            "text": "",
            "title": "ModRewrite"
        },
        {
            "location": "/apache/#arch_1",
            "text": "Descomente  LoadModule rewrite_module modules/mod_rewrite.so  do arquivo  /etc/httpd/conf/httpd.conf  e restart o servi\u00e7o  httpd",
            "title": "Arch"
        },
        {
            "location": "/apache/#ubuntu_1",
            "text": "Para habilitar o m\u00f3dulo no Apache basta esta linha:  a2enmod rewrite  Agora abra o arquivo de configura\u00e7\u00e3o:  vim  /etc/apache2/sites-available/default  Procure no seu arquivo a entrada \"AllowOverride None\"\nAltere esse valor para \"AllowOverride All\" .\nSalve o arquivo e reinicie o Apache.  /etc/init.d/apache2 restart\nor\nservice apache2 restart",
            "title": "Ubuntu"
        },
        {
            "location": "/docker/",
            "text": "Docker\n\n\nInstalling\n\n\nsudo pacman -S docker\nnewgrp docker\nsudo gpasswd -a jhon docker\nsystemctl start docker\n\n\n\n\nPull Image\n\n\nEx.:\n\n\ndocker pull postgres:9.5.7\n\n\n\n\nStart Container\n\n\nEx.:\n\n\ndocker run -i -p 5432:5432 --name postgres -e POSTGRES_DB=xpto_db -d postgres:9.5.7\n\n\n\n\nExec command in container\n\n\nEx.:\n\n\ndocker exec postgres pg_dump -U postgres xpto_db > backup.sql\n\n\n\n\nDocker copy file from container\n\n\nEx.:\n\n\ndocker cp ./Downloads/backup.sql postgres:/backup.sql\n\n\n\n\nContaner access\n\n\nEx.:\n\n\ndocker exec -it postgres bash",
            "title": "Docker"
        },
        {
            "location": "/docker/#docker",
            "text": "",
            "title": "Docker"
        },
        {
            "location": "/docker/#installing",
            "text": "sudo pacman -S docker\nnewgrp docker\nsudo gpasswd -a jhon docker\nsystemctl start docker",
            "title": "Installing"
        },
        {
            "location": "/docker/#pull-image",
            "text": "Ex.:  docker pull postgres:9.5.7",
            "title": "Pull Image"
        },
        {
            "location": "/docker/#start-container",
            "text": "Ex.:  docker run -i -p 5432:5432 --name postgres -e POSTGRES_DB=xpto_db -d postgres:9.5.7",
            "title": "Start Container"
        },
        {
            "location": "/docker/#exec-command-in-container",
            "text": "Ex.:  docker exec postgres pg_dump -U postgres xpto_db > backup.sql",
            "title": "Exec command in container"
        },
        {
            "location": "/docker/#docker-copy-file-from-container",
            "text": "Ex.:  docker cp ./Downloads/backup.sql postgres:/backup.sql",
            "title": "Docker copy file from container"
        },
        {
            "location": "/docker/#contaner-access",
            "text": "Ex.:  docker exec -it postgres bash",
            "title": "Contaner access"
        },
        {
            "location": "/go/",
            "text": "Go Lang\n\n\nCheck that Go is installed correctly by building a simple program, as follows:\n\n\nhello.go\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, Arch!\")\n}\n\n\n\n\nThen run it with the go tool:\n\n\n$ go run hello.go\n\nHello, Arch!\n\n\n\n\nCompilation with standard gc compiler (same as go build -compiler=gc hello.go):\n\n\n$ go build hello.go\n$ ./hello\n\nHello, Arch!\n\n\n\n\nSimple Api GO\n\n\npackage main\n\nimport (\n    \"fmt\"\n    \"html\"\n    \"log\"\n    \"net/http\"\n)\n\nfunc main() {\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprintf(w, \"Hello, %q\", html.EscapeString(r.URL.Path))\n    })\n\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\n}",
            "title": "Go Lang"
        },
        {
            "location": "/go/#go-lang",
            "text": "Check that Go is installed correctly by building a simple program, as follows:  hello.go\n\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Hello, Arch!\")\n}  Then run it with the go tool:  $ go run hello.go\n\nHello, Arch!  Compilation with standard gc compiler (same as go build -compiler=gc hello.go):  $ go build hello.go\n$ ./hello\n\nHello, Arch!",
            "title": "Go Lang"
        },
        {
            "location": "/go/#simple-api-go",
            "text": "package main\n\nimport (\n    \"fmt\"\n    \"html\"\n    \"log\"\n    \"net/http\"\n)\n\nfunc main() {\n    http.HandleFunc(\"/\", func(w http.ResponseWriter, r *http.Request) {\n        fmt.Fprintf(w, \"Hello, %q\", html.EscapeString(r.URL.Path))\n    })\n\n    log.Fatal(http.ListenAndServe(\":8080\", nil))\n}",
            "title": "Simple Api GO"
        },
        {
            "location": "/ingles/",
            "text": "",
            "title": "Ingles"
        },
        {
            "location": "/mkdocs/",
            "text": "Welcome to MkDocs\n\n\nFor full documentation visit \nmkdocs.org\n.\n\n\nCommands\n\n\n\n\nmkdocs new [dir-name]\n - Create a new project.\n\n\nmkdocs serve\n - Start the live-reloading docs server.\n\n\nmkdocs build\n - Build the documentation site.\n\n\nmkdocs help\n - Print this help message.\n\n\n\n\nProject layout\n\n\nmkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n\n\n\nmkdocs file\n\n\nsite_name: Jhon Mike Wiki\ntheme: readthedocs",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/mkdocs/#welcome-to-mkdocs",
            "text": "For full documentation visit  mkdocs.org .",
            "title": "Welcome to MkDocs"
        },
        {
            "location": "/mkdocs/#commands",
            "text": "mkdocs new [dir-name]  - Create a new project.  mkdocs serve  - Start the live-reloading docs server.  mkdocs build  - Build the documentation site.  mkdocs help  - Print this help message.",
            "title": "Commands"
        },
        {
            "location": "/mkdocs/#project-layout",
            "text": "mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.",
            "title": "Project layout"
        },
        {
            "location": "/mkdocs/#mkdocs-file",
            "text": "site_name: Jhon Mike Wiki\ntheme: readthedocs",
            "title": "mkdocs file"
        },
        {
            "location": "/shell/",
            "text": "Comando para dar redirect no shell e limpar mensagens\n\n\n[:command] &>/dev/null\n\n\n\n\nPython pipe\n\n\nWith Python 2.6+ you can just do:\n\n\necho '{\"foo\": \"lorem\", \"bar\": \"ipsum\"}' | python -m json.tool\n\n\nor, if the JSON is in a file, you can do:\n\n\npython -m json.tool my_json.json\n\n\nif the JSON is from an internet source such as an API, you can use\n\n\ncurl http://my_url/ | python -m json.tool\n\n\nfor convenience in all of these cases you can make an alias:\n\n\nalias prettyjson='python -m json.tool'",
            "title": "Comando para dar redirect no shell e limpar mensagens"
        },
        {
            "location": "/shell/#comando-para-dar-redirect-no-shell-e-limpar-mensagens",
            "text": "[:command] &>/dev/null",
            "title": "Comando para dar redirect no shell e limpar mensagens"
        },
        {
            "location": "/shell/#python-pipe",
            "text": "With Python 2.6+ you can just do:  echo '{\"foo\": \"lorem\", \"bar\": \"ipsum\"}' | python -m json.tool  or, if the JSON is in a file, you can do:  python -m json.tool my_json.json  if the JSON is from an internet source such as an API, you can use  curl http://my_url/ | python -m json.tool  for convenience in all of these cases you can make an alias:  alias prettyjson='python -m json.tool'",
            "title": "Python pipe"
        },
        {
            "location": "/sql/",
            "text": "INSERT\n\n\nINSERT INTO table_name VALUES (value1,value2,value3);\n\nOR\n\nINSERT INTO table_name (column1,column2,column3) VALUES (value1,value2,value3);\n\n\n\n\nUPDATE\n\n\nUPDATE table_name SET column1=value1,column2=value2 WHERE some_column=some_value;\n\n\n\n\nDELETE\n\n\nDELETE FROM table_name WHERE some_column=some_value;\n\n\n\n\nSELECT\n\n\nSELECT * FROM table_name WHERE some_column=some_value ORDER BY column_name ASC, column_name DESC;\n\n\n\n\nJOIN\n\n\nSELECT * FROM order INNER JOIN customer ON Orders.customerId=Customers.id; \n\n\n\n\nCREATE TABLE\n\n\nCREATE TABLE table_name (\n    id INT AUTO_INCREMENT NOT NULL,\n    sequence INT(10) NOT NULL,\n    account_id INT DEFAULT NULL,\n    revenue_id INT DEFAULT NULL,\n    created DATETIME NOT NULL,\n    updated DATETIME DEFAULT NULL,\n    INDEX IDX_921775439B6B5FBA (account_id),\n    INDEX IDX_92177543224718EB (revenue_id),\n    PRIMARY KEY(id)\n);\n\n\n\n\nALTER TABLE\n\n\nALTER TABLE client ADD email_accountant varchar(100);\nALTER TABLE zip_code MODIFY COLUMN zipCode varchar(8);\nALTER TABLE client CHANGE columnOldName columnNewName varchar(10);\n\n\n\n\nShow info table\n\n\nDESCRIBE client;",
            "title": "INSERT"
        },
        {
            "location": "/sql/#insert",
            "text": "INSERT INTO table_name VALUES (value1,value2,value3);\n\nOR\n\nINSERT INTO table_name (column1,column2,column3) VALUES (value1,value2,value3);",
            "title": "INSERT"
        },
        {
            "location": "/sql/#update",
            "text": "UPDATE table_name SET column1=value1,column2=value2 WHERE some_column=some_value;",
            "title": "UPDATE"
        },
        {
            "location": "/sql/#delete",
            "text": "DELETE FROM table_name WHERE some_column=some_value;",
            "title": "DELETE"
        },
        {
            "location": "/sql/#select",
            "text": "SELECT * FROM table_name WHERE some_column=some_value ORDER BY column_name ASC, column_name DESC;",
            "title": "SELECT"
        },
        {
            "location": "/sql/#join",
            "text": "SELECT * FROM order INNER JOIN customer ON Orders.customerId=Customers.id;",
            "title": "JOIN"
        },
        {
            "location": "/sql/#create-table",
            "text": "CREATE TABLE table_name (\n    id INT AUTO_INCREMENT NOT NULL,\n    sequence INT(10) NOT NULL,\n    account_id INT DEFAULT NULL,\n    revenue_id INT DEFAULT NULL,\n    created DATETIME NOT NULL,\n    updated DATETIME DEFAULT NULL,\n    INDEX IDX_921775439B6B5FBA (account_id),\n    INDEX IDX_92177543224718EB (revenue_id),\n    PRIMARY KEY(id)\n);",
            "title": "CREATE TABLE"
        },
        {
            "location": "/sql/#alter-table",
            "text": "ALTER TABLE client ADD email_accountant varchar(100);\nALTER TABLE zip_code MODIFY COLUMN zipCode varchar(8);\nALTER TABLE client CHANGE columnOldName columnNewName varchar(10);",
            "title": "ALTER TABLE"
        },
        {
            "location": "/sql/#show-info-table",
            "text": "DESCRIBE client;",
            "title": "Show info table"
        },
        {
            "location": "/ecmascript/angular/",
            "text": "",
            "title": "Angular"
        },
        {
            "location": "/editor/sublime-text/",
            "text": "My Config Sublime\n\n\n{\n    \"theme\": \"Soda Dark 3.sublime-theme\",\n    \"soda_folder_icons\": true,\n    \"color_scheme\": \"Packages/Dracula Color Scheme/Dracula.tmTheme\",\n    \"draw_white_space\": \"all\",\n    \"ensure_newline_at_eof_on_save\": true,\n    \"translate_tabs_to_spaces\": true,\n    \"index_files\": false,\n    \"ignored_packages\":\n    [\n        \"Vintage\"\n    ],\n    \"vintage_ctrl_keys\": false,\n    \"vintage_start_in_command_mode\": false,\n    \"rulers\":\n    [\n        100,\n        120\n    ]\n}\n\n\n\n\nConfig Keys\n\n\n[\n    { \"keys\": [\"alt+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n    { \"keys\": [\"alt+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} }\n]\n\n\n\n\nConfig Keys OpenBox\n\n\n[\n    { \"keys\": [\"super+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n    { \"keys\": [\"super+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} }\n]",
            "title": "My Config Sublime"
        },
        {
            "location": "/editor/sublime-text/#my-config-sublime",
            "text": "{\n    \"theme\": \"Soda Dark 3.sublime-theme\",\n    \"soda_folder_icons\": true,\n    \"color_scheme\": \"Packages/Dracula Color Scheme/Dracula.tmTheme\",\n    \"draw_white_space\": \"all\",\n    \"ensure_newline_at_eof_on_save\": true,\n    \"translate_tabs_to_spaces\": true,\n    \"index_files\": false,\n    \"ignored_packages\":\n    [\n        \"Vintage\"\n    ],\n    \"vintage_ctrl_keys\": false,\n    \"vintage_start_in_command_mode\": false,\n    \"rulers\":\n    [\n        100,\n        120\n    ]\n}",
            "title": "My Config Sublime"
        },
        {
            "location": "/editor/sublime-text/#config-keys",
            "text": "[\n    { \"keys\": [\"alt+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n    { \"keys\": [\"alt+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} }\n]",
            "title": "Config Keys"
        },
        {
            "location": "/editor/sublime-text/#config-keys-openbox",
            "text": "[\n    { \"keys\": [\"super+shift+up\"], \"command\": \"select_lines\", \"args\": {\"forward\": false} },\n    { \"keys\": [\"super+shift+down\"], \"command\": \"select_lines\", \"args\": {\"forward\": true} }\n]",
            "title": "Config Keys OpenBox"
        },
        {
            "location": "/editor/vim/",
            "text": "Vim Atalhos\n\n\nModo normal:\n\n\n\n\nNavega\u00e7\u00e3o com vim, hjkl.\n\n\nNavega\u00e7\u00e3o por palavras, w, e\n\n\nIndo pro vim, com $, pro come\u00e7o com 0 ou ^ ou _\n\n\nIndo pro come\u00e7o, fim: gg, G\n\n\nIndo pra linha: 5G\n\n\nIndo pra cima, meio, baixo (High, Middle, Low): H, M, L\n\n\nIndo pro primeiro caracter k: fk\n\n\nRepetindo: ;\n\n\nProcurando outras ocorr\u00eancias da palavra: *, depois n\n\n\nMeia p\u00e1gina pra baixo ou cima: CTRL-D, CTRL-U\n\n\nBatendo par\u00eantesis, chave ou colchete: %\n\n\nCombinando: 3w, 3ft\n\n\nEditando com modo normal: r, d, y, p, P, ~\n\n\nCombinando: 3yy, 2dd, 3w, 3p\n\n\nRepetindo: .\n\n\nUndo: u\n\n\nRedo: CTRL-R\n\n\n\n\nModo visual e bloco:\n\n\n\n\nEditando com modo visual: u, U, ~\n\n\nCombinando: 3yy, 2dd, 3w\n\n\n\n\nComandos:\n\n\n:w, :x, :wq, :q, :q!\n\n\nInsert Mode:\n\n\n\n\nEntrando em insert mode: i, a, A, c, o, O",
            "title": "Vim Atalhos"
        },
        {
            "location": "/editor/vim/#vim-atalhos",
            "text": "",
            "title": "Vim Atalhos"
        },
        {
            "location": "/editor/vim/#modo-normal",
            "text": "Navega\u00e7\u00e3o com vim, hjkl.  Navega\u00e7\u00e3o por palavras, w, e  Indo pro vim, com $, pro come\u00e7o com 0 ou ^ ou _  Indo pro come\u00e7o, fim: gg, G  Indo pra linha: 5G  Indo pra cima, meio, baixo (High, Middle, Low): H, M, L  Indo pro primeiro caracter k: fk  Repetindo: ;  Procurando outras ocorr\u00eancias da palavra: *, depois n  Meia p\u00e1gina pra baixo ou cima: CTRL-D, CTRL-U  Batendo par\u00eantesis, chave ou colchete: %  Combinando: 3w, 3ft  Editando com modo normal: r, d, y, p, P, ~  Combinando: 3yy, 2dd, 3w, 3p  Repetindo: .  Undo: u  Redo: CTRL-R",
            "title": "Modo normal:"
        },
        {
            "location": "/editor/vim/#modo-visual-e-bloco",
            "text": "Editando com modo visual: u, U, ~  Combinando: 3yy, 2dd, 3w",
            "title": "Modo visual e bloco:"
        },
        {
            "location": "/editor/vim/#comandos",
            "text": ":w, :x, :wq, :q, :q!",
            "title": "Comandos:"
        },
        {
            "location": "/editor/vim/#insert-mode",
            "text": "Entrando em insert mode: i, a, A, c, o, O",
            "title": "Insert Mode:"
        },
        {
            "location": "/interfaces/i3wm/",
            "text": "",
            "title": "I3wm"
        },
        {
            "location": "/interfaces/openbox/",
            "text": "",
            "title": "Openbox"
        },
        {
            "location": "/linux/arch-instalacao/",
            "text": "Instala\u00e7\u00e3o Arch\n\n\nWiki Perfeita\n\n\n\n\nGuia de Instala\u00e7\u00e3o Arch\n\n\n(o encrypt tem que ser feito pouco antes da forma\u00e7\u00e3o das parti\u00e7\u00f5es e ele afeta em alguns detalhes do GRUB)\n\n\nEncrypt Parti\u00e7\u00e3o\n\n\nConfigura\u00e7\u00e3o do GRUB\n\n\nDeepin Interface no Arch\n\n\n\n\nMais ou menos como fiz:\n\n\nDefiniremos o layout do nosso teclado:\n\n\nloadkeys br-abnt2\n\n\n\n\nVamos alterar o idioma da instala\u00e7\u00e3o:\n\n\ndescomente a linha com \n#pt_BR.UTF-8\n do arquivo \n/etc/locale.gen\n\nAp\u00f3s o procedimento de altera\u00e7\u00e3o:\n\n\nlocale-gen && export LANG=pt_BR.UTF-8\n\n\n\n\nParticionando o HD para modo UEFI\n\n\n/dev/sda1 /boot/efi type: EFI 512M\n/dev/sda2           type: swap 4G\n/dev/sda3 /         type: ext4 full\n/dev/sda4 /home     type: ext4 full (opcional)\n\n\n\n\nAcessando a rede wifi\n\n\nwifi-menu\n\nping -c3 google.com\n\n\n\n\nFormata\u00e7\u00e3o\n\n\nfdisk -l\n\n\n\n\nMontando as parti\u00e7\u00f5es sem crypt\n\n\n/\n\n\nmkfs.ext4 /dev/sda3\nmount /dev/sda3 /mnt\n\n\n\n\nSwap\n\n\nmkswap /dev/sda2\nswapon /dev/sda2\n\n\n\n\nUEFI\n\n\nmkfs.fat -F32 /dev/sda1\nmkdir /mnt/boot\nmkdir /mnt/boot/efi\nmount /dev/sda1 /mnt/boot/efi\n\n\n\n\nHome (opcional)\n\n\nmkdir /mnt/home\nmount /dev/sda4 /mnt/home\n\n\n\n\nMontando as parti\u00e7\u00f5es com crypt\n\n\n/\n\n\ncryptsetup -y -v luksFormat /dev/sda3\ncryptsetup open /dev/sda3 cryptroot\nmkfs.ext4 /dev/mapper/cryptroot\nmount /dev/mapper/cryptroot /mnt\n\n\n\n\nSwap\n\n\nmkswap /dev/sda2\nswapon /dev/sda2\n\n\n\n\nUEFI\n\n\nmkfs.fat -F32 /dev/sda1\nmkdir /mnt/boot\nmkdir /mnt/boot/efi\nmount /dev/sda1 /mnt/boot/efi\n\n\n\n\nAgora configuraremos os reposit\u00f3rios do Arch Linux:\n\n\nNo arquivo \n/etc/pacman.d/mirrorlist\n esta a ordem de prioridade dos links que seram utilizados na busca de pacotes\nse desejar altere a ordem colocando os links do BRAZIL no topo da lista.\n\n\nEm seguida instale a base do arch\n\n\npacstrap -i /mnt base base-devel\n\n\n\n\nFstab\n\n\nO Fstab ira salvar gerar as configs de montagem das parti\u00e7\u00f5es de seu hd/ssd\n\n\ngenfstab -U -p /mnt >> /mnt/etc/fstab\n\n\n\n\nIniciando root\n\n\narch-chroot /mnt /bin/bash\n\n\n\n\nConfigura\u00e7\u00f5es basicas do seu ArchLinux\n\n\nIdioma do Arch Linux, descomente a linha com \npt_BR\n do arquivo \n/etc/locale.gen\n e rode \nlocale-gen\n\nEm seguida, execute:\n\n\necho LANG=pt_BR.UTF-8 > /etc/locale.conf && export LANG=pt_BR.UTF-8\n\n\n\n\nFuso Hor\u00e1rio:\n\n\nln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime\n\n\n\n\nRel\u00f3gio do Hardware:\n\n\nhwclock --systohc --utc\n\n\n\n\nHostname:\n\n\necho ArchLinux > /etc/hostname\n\n\n\n\nInstala\u00e7\u00e3o das ferramentas Wireless no sistema base do Arch Linux:\n\n\npacman -S wireless_tools wpa_supplicant wpa_actiond dialog\n\n\n\n\nAmbiente inicial:\n\n\nmkinitcpio -p linux\n\n\n\n\nSenha do root:\n\n\npasswd\n\n\n\n\nInforme sua senha, confirme e d\u00ea um Enter.\n\n\nHabilitar multilib\n\n\nvim /etc/pacman.conf\n\n\n\n\nNo arquivo procure as linhas:\n\n\n#[multilib]\n#Include = /etc/pacman.d/mirrorlist\n\n\n\n\nRetire o # de ambas e atualize o pacman\n\n\npacman -Syu\n\n\n\n\nConfig de BOOT\n\n\n\n\nGrub\n\n\nSyslinux\n\n\n\n\nCriar usu\u00e1rio padr\u00e3o:\n\n\nuseradd -m -g users -G wheel -s /bin/bash seu-usuario\npasswd seu-usuario\n\n\n\n\nAdicionar permiss\u00f5es do sistema ao usu\u00e1rio:\n\n\ngpasswd -a seu-usuario locate\ngpasswd -a seu-usuario users\ngpasswd -a seu-usuario audio\ngpasswd -a seu-usuario video\ngpasswd -a seu-usuario daemon\ngpasswd -a seu-usuario dbus\ngpasswd -a seu-usuario disk\ngpasswd -a seu-usuario games\ngpasswd -a seu-usuario rfkill\ngpasswd -a seu-usuario lp\ngpasswd -a seu-usuario network\ngpasswd -a seu-usuario optical\ngpasswd -a seu-usuario power\ngpasswd -a seu-usuario scanner\ngpasswd -a seu-usuario storage\n\n\n\n\nXorg\n\n\npacman -S xorg-xinit xorg-server\n\n\n\n\nIntel\n\n\npacman -S xf86-video-intel mesa mesa-demos \n\n\n\n\nNVIDIA\n\n\nMostrar os controladores compat\u00edveis VGA:\n\n\nlspci | grep VGA\n\n\n\n\nInstala\u00e7\u00e3o dos drivers:\n\n\npacman -S intel-dri xf86-video-intel bumblebee nvidia\n\n\n\n\nInstala\u00e7\u00e3o do bbswitch:\n\n\npacman -S bbswitch\n\n\n\n\nInstala\u00e7\u00e3o das libs 32bits (Caso seu Arch seja da arquitetura 86_x64, configurar o multilib no arquivo /etc/pacman.conf) e demais pacotes:\n\n\npacman -S lib32-nvidia-utils\npacman -S lib32-intel-dri\npacman -S opencl-nvidia\npacman -S lib32-virtualgl\n\n\n\n\nAdicionar o nosso usu\u00e1rio ao grupo Bumblebee:\n\n\ngpasswd -a nomeDoUsuario bumblebee\n\n\n\n\nVerificar e ativar o servi\u00e7o do Bumblebee:\n\n\nsystemctl status bumblebeed\nsystemctl enable bumblebeed\nsystemctl start bumblebeed\n\n\n\n\nTestar elemento gr\u00e1fico do pacote opencl:\n\n\nglxspheres64\n\n\n\n\nTestar elemento gr\u00e1fico do pacote opencl utilizando a placa dedicada Nvidia:\n\n\noptirun glxspheres64\n\n\n\n\nDICA: Para testar se o bbswitch est\u00e1 ativo:\n\n\ncat /proc/acpi/bbswitch\n\n\n\n\nDICA DE EXECU\u00c7\u00c3O: Para executar alguma aplica\u00e7\u00e3o com o uso da placa gr\u00e1fica NVIDIA:\n\n\noptirun nomeAplicacao\n\n\n\n\nATI\n\n\npacman -S xf86-video-ati\n\n\n\n\ntouchpad, mouse e teclado, respectivamente.\n\n\npacman -S xf86-input-synaptics xf86-input-mouse xf86-input-keyboard\n\n\n\n\nConfigura\u00e7\u00e3o do sudo:\n\n\nEditar o arquivo \n/etc/sudoers\n como abaixo:\n\n\nroot ALL=(ALL) ALL\nseu-usuario ALL=(ALL) ALL\n\n\n\n\nPacotes do AUR\n\n\nNo arquivo \n/etc/pacman.conf\n adicione as seguintes linhas no final do arquivo:\n\n\n[archlinuxfr]\nSigLevel =  Never\nServer = http://repo.archlinux.fr/$arch\n\n\n\n\ne execute:\n\n\npacman -Sy yaourt\n\n\n\n\nPronto!\n\n\nFinalizamos a instala\u00e7\u00e3o e configura\u00e7\u00e3o b\u00e1sica do sistema.\n\n\nSaia do chroot:\n\n\nexit\n\n\n\n\nDesmonte tudo relacionado a pasta /mnt e reinicie o sistema:\n\n\numount -R /mnt && reboot",
            "title": "Instala\u00e7\u00e3o Arch"
        },
        {
            "location": "/linux/arch-instalacao/#instalacao-arch",
            "text": "",
            "title": "Instala\u00e7\u00e3o Arch"
        },
        {
            "location": "/linux/arch-instalacao/#wiki-perfeita",
            "text": "Guia de Instala\u00e7\u00e3o Arch  (o encrypt tem que ser feito pouco antes da forma\u00e7\u00e3o das parti\u00e7\u00f5es e ele afeta em alguns detalhes do GRUB)  Encrypt Parti\u00e7\u00e3o  Configura\u00e7\u00e3o do GRUB  Deepin Interface no Arch",
            "title": "Wiki Perfeita"
        },
        {
            "location": "/linux/arch-instalacao/#mais-ou-menos-como-fiz",
            "text": "",
            "title": "Mais ou menos como fiz:"
        },
        {
            "location": "/linux/arch-instalacao/#definiremos-o-layout-do-nosso-teclado",
            "text": "loadkeys br-abnt2",
            "title": "Definiremos o layout do nosso teclado:"
        },
        {
            "location": "/linux/arch-instalacao/#vamos-alterar-o-idioma-da-instalacao",
            "text": "descomente a linha com  #pt_BR.UTF-8  do arquivo  /etc/locale.gen \nAp\u00f3s o procedimento de altera\u00e7\u00e3o:  locale-gen && export LANG=pt_BR.UTF-8",
            "title": "Vamos alterar o idioma da instala\u00e7\u00e3o:"
        },
        {
            "location": "/linux/arch-instalacao/#particionando-o-hd-para-modo-uefi",
            "text": "/dev/sda1 /boot/efi type: EFI 512M\n/dev/sda2           type: swap 4G\n/dev/sda3 /         type: ext4 full\n/dev/sda4 /home     type: ext4 full (opcional)",
            "title": "Particionando o HD para modo UEFI"
        },
        {
            "location": "/linux/arch-instalacao/#acessando-a-rede-wifi",
            "text": "wifi-menu\n\nping -c3 google.com",
            "title": "Acessando a rede wifi"
        },
        {
            "location": "/linux/arch-instalacao/#formatacao",
            "text": "fdisk -l",
            "title": "Formata\u00e7\u00e3o"
        },
        {
            "location": "/linux/arch-instalacao/#montando-as-particoes-sem-crypt",
            "text": "/  mkfs.ext4 /dev/sda3\nmount /dev/sda3 /mnt  Swap  mkswap /dev/sda2\nswapon /dev/sda2  UEFI  mkfs.fat -F32 /dev/sda1\nmkdir /mnt/boot\nmkdir /mnt/boot/efi\nmount /dev/sda1 /mnt/boot/efi  Home (opcional)  mkdir /mnt/home\nmount /dev/sda4 /mnt/home",
            "title": "Montando as parti\u00e7\u00f5es sem crypt"
        },
        {
            "location": "/linux/arch-instalacao/#montando-as-particoes-com-crypt",
            "text": "/  cryptsetup -y -v luksFormat /dev/sda3\ncryptsetup open /dev/sda3 cryptroot\nmkfs.ext4 /dev/mapper/cryptroot\nmount /dev/mapper/cryptroot /mnt  Swap  mkswap /dev/sda2\nswapon /dev/sda2  UEFI  mkfs.fat -F32 /dev/sda1\nmkdir /mnt/boot\nmkdir /mnt/boot/efi\nmount /dev/sda1 /mnt/boot/efi",
            "title": "Montando as parti\u00e7\u00f5es com crypt"
        },
        {
            "location": "/linux/arch-instalacao/#agora-configuraremos-os-repositorios-do-arch-linux",
            "text": "No arquivo  /etc/pacman.d/mirrorlist  esta a ordem de prioridade dos links que seram utilizados na busca de pacotes\nse desejar altere a ordem colocando os links do BRAZIL no topo da lista.  Em seguida instale a base do arch  pacstrap -i /mnt base base-devel",
            "title": "Agora configuraremos os reposit\u00f3rios do Arch Linux:"
        },
        {
            "location": "/linux/arch-instalacao/#fstab",
            "text": "O Fstab ira salvar gerar as configs de montagem das parti\u00e7\u00f5es de seu hd/ssd  genfstab -U -p /mnt >> /mnt/etc/fstab",
            "title": "Fstab"
        },
        {
            "location": "/linux/arch-instalacao/#iniciando-root",
            "text": "arch-chroot /mnt /bin/bash",
            "title": "Iniciando root"
        },
        {
            "location": "/linux/arch-instalacao/#configuracoes-basicas-do-seu-archlinux",
            "text": "Idioma do Arch Linux, descomente a linha com  pt_BR  do arquivo  /etc/locale.gen  e rode  locale-gen \nEm seguida, execute:  echo LANG=pt_BR.UTF-8 > /etc/locale.conf && export LANG=pt_BR.UTF-8  Fuso Hor\u00e1rio:  ln -sf /usr/share/zoneinfo/America/Sao_Paulo /etc/localtime  Rel\u00f3gio do Hardware:  hwclock --systohc --utc  Hostname:  echo ArchLinux > /etc/hostname",
            "title": "Configura\u00e7\u00f5es basicas do seu ArchLinux"
        },
        {
            "location": "/linux/arch-instalacao/#instalacao-das-ferramentas-wireless-no-sistema-base-do-arch-linux",
            "text": "pacman -S wireless_tools wpa_supplicant wpa_actiond dialog",
            "title": "Instala\u00e7\u00e3o das ferramentas Wireless no sistema base do Arch Linux:"
        },
        {
            "location": "/linux/arch-instalacao/#ambiente-inicial",
            "text": "mkinitcpio -p linux",
            "title": "Ambiente inicial:"
        },
        {
            "location": "/linux/arch-instalacao/#senha-do-root",
            "text": "passwd  Informe sua senha, confirme e d\u00ea um Enter.",
            "title": "Senha do root:"
        },
        {
            "location": "/linux/arch-instalacao/#habilitar-multilib",
            "text": "vim /etc/pacman.conf  No arquivo procure as linhas:  #[multilib]\n#Include = /etc/pacman.d/mirrorlist  Retire o # de ambas e atualize o pacman  pacman -Syu",
            "title": "Habilitar multilib"
        },
        {
            "location": "/linux/arch-instalacao/#config-de-boot",
            "text": "Grub  Syslinux",
            "title": "Config de BOOT"
        },
        {
            "location": "/linux/arch-instalacao/#criar-usuario-padrao",
            "text": "useradd -m -g users -G wheel -s /bin/bash seu-usuario\npasswd seu-usuario  Adicionar permiss\u00f5es do sistema ao usu\u00e1rio:  gpasswd -a seu-usuario locate\ngpasswd -a seu-usuario users\ngpasswd -a seu-usuario audio\ngpasswd -a seu-usuario video\ngpasswd -a seu-usuario daemon\ngpasswd -a seu-usuario dbus\ngpasswd -a seu-usuario disk\ngpasswd -a seu-usuario games\ngpasswd -a seu-usuario rfkill\ngpasswd -a seu-usuario lp\ngpasswd -a seu-usuario network\ngpasswd -a seu-usuario optical\ngpasswd -a seu-usuario power\ngpasswd -a seu-usuario scanner\ngpasswd -a seu-usuario storage",
            "title": "Criar usu\u00e1rio padr\u00e3o:"
        },
        {
            "location": "/linux/arch-instalacao/#xorg",
            "text": "pacman -S xorg-xinit xorg-server",
            "title": "Xorg"
        },
        {
            "location": "/linux/arch-instalacao/#intel",
            "text": "pacman -S xf86-video-intel mesa mesa-demos",
            "title": "Intel"
        },
        {
            "location": "/linux/arch-instalacao/#nvidia",
            "text": "Mostrar os controladores compat\u00edveis VGA:  lspci | grep VGA  Instala\u00e7\u00e3o dos drivers:  pacman -S intel-dri xf86-video-intel bumblebee nvidia  Instala\u00e7\u00e3o do bbswitch:  pacman -S bbswitch  Instala\u00e7\u00e3o das libs 32bits (Caso seu Arch seja da arquitetura 86_x64, configurar o multilib no arquivo /etc/pacman.conf) e demais pacotes:  pacman -S lib32-nvidia-utils\npacman -S lib32-intel-dri\npacman -S opencl-nvidia\npacman -S lib32-virtualgl  Adicionar o nosso usu\u00e1rio ao grupo Bumblebee:  gpasswd -a nomeDoUsuario bumblebee  Verificar e ativar o servi\u00e7o do Bumblebee:  systemctl status bumblebeed\nsystemctl enable bumblebeed\nsystemctl start bumblebeed  Testar elemento gr\u00e1fico do pacote opencl:  glxspheres64  Testar elemento gr\u00e1fico do pacote opencl utilizando a placa dedicada Nvidia:  optirun glxspheres64  DICA: Para testar se o bbswitch est\u00e1 ativo:  cat /proc/acpi/bbswitch  DICA DE EXECU\u00c7\u00c3O: Para executar alguma aplica\u00e7\u00e3o com o uso da placa gr\u00e1fica NVIDIA:  optirun nomeAplicacao",
            "title": "NVIDIA"
        },
        {
            "location": "/linux/arch-instalacao/#ati",
            "text": "pacman -S xf86-video-ati",
            "title": "ATI"
        },
        {
            "location": "/linux/arch-instalacao/#touchpad-mouse-e-teclado-respectivamente",
            "text": "pacman -S xf86-input-synaptics xf86-input-mouse xf86-input-keyboard",
            "title": "touchpad, mouse e teclado, respectivamente."
        },
        {
            "location": "/linux/arch-instalacao/#configuracao-do-sudo",
            "text": "Editar o arquivo  /etc/sudoers  como abaixo:  root ALL=(ALL) ALL\nseu-usuario ALL=(ALL) ALL",
            "title": "Configura\u00e7\u00e3o do sudo:"
        },
        {
            "location": "/linux/arch-instalacao/#pacotes-do-aur",
            "text": "No arquivo  /etc/pacman.conf  adicione as seguintes linhas no final do arquivo:  [archlinuxfr]\nSigLevel =  Never\nServer = http://repo.archlinux.fr/$arch  e execute:  pacman -Sy yaourt",
            "title": "Pacotes do AUR"
        },
        {
            "location": "/linux/arch-instalacao/#pronto",
            "text": "Finalizamos a instala\u00e7\u00e3o e configura\u00e7\u00e3o b\u00e1sica do sistema.  Saia do chroot:  exit  Desmonte tudo relacionado a pasta /mnt e reinicie o sistema:  umount -R /mnt && reboot",
            "title": "Pronto!"
        },
        {
            "location": "/linux/arch-nvidia/",
            "text": "Instala\u00e7\u00e3o\n\n\nsudo pacman -S nvidia nvidia-libgl xorg-xrandr\n\n\n\n\nConfig\n\n\nlspci | grep -E \"VGA|3D\"\n\n\n\n\n/etc/X11/xorg.conf\n\n\nSection \"Module\"\n    Load \"modesetting\"\nEndSection\n\nSection \"Device\"\n    Identifier \"nvidia\"\n    Driver \"nvidia\"\n    BusID \"PCI:8.0.0\"\n    Option \"AllowEmptyInitialConfiguration\"\nEndSection\n\n\n\n\n~/.xinitrc\n\n\nxrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto",
            "title": "Instala\u00e7\u00e3o"
        },
        {
            "location": "/linux/arch-nvidia/#instalacao",
            "text": "sudo pacman -S nvidia nvidia-libgl xorg-xrandr",
            "title": "Instala\u00e7\u00e3o"
        },
        {
            "location": "/linux/arch-nvidia/#config",
            "text": "lspci | grep -E \"VGA|3D\"  /etc/X11/xorg.conf  Section \"Module\"\n    Load \"modesetting\"\nEndSection\n\nSection \"Device\"\n    Identifier \"nvidia\"\n    Driver \"nvidia\"\n    BusID \"PCI:8.0.0\"\n    Option \"AllowEmptyInitialConfiguration\"\nEndSection  ~/.xinitrc  xrandr --setprovideroutputsource modesetting NVIDIA-0\nxrandr --auto",
            "title": "Config"
        },
        {
            "location": "/linux/arch/",
            "text": "Preferencia IPV4\n\n\nsudo sh -c \"echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf\"",
            "title": "Preferencia IPV4"
        },
        {
            "location": "/linux/arch/#preferencia-ipv4",
            "text": "sudo sh -c \"echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf\"",
            "title": "Preferencia IPV4"
        },
        {
            "location": "/linux/grub/",
            "text": "GRUB\n\n\nNesse guia, utilizaremos o Grub como o gerenciador de boot, ent\u00e3o:\n\n\npacman -S grub grub-efi-x86_64 efibootmgr\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=boot --recheck\ngrub-mkconfig -o /boot/grub/grub.cfg\nmv boot/grubx64.efi boot/bootx64.efi\nefibootmgr -c -g -d /dev/sda -p 1 -w -L boot -l '\\\\EFI\\\\boot\\\\bootx64.efi'\nefibootmgr -n IDBOOT\n\n\n\n\nEncryption com GRUB\n\n\n/etc/mkinitcpio.conf\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)\n\n\n\n\n/etc/default/grub\nGRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda2:cryptroot\"\nGRUB_ENABLE_CRYPTODISK=y\n\n\n\n\nmkinitcpio -p linux",
            "title": "GRUB"
        },
        {
            "location": "/linux/grub/#grub",
            "text": "Nesse guia, utilizaremos o Grub como o gerenciador de boot, ent\u00e3o:  pacman -S grub grub-efi-x86_64 efibootmgr\ngrub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=boot --recheck\ngrub-mkconfig -o /boot/grub/grub.cfg\nmv boot/grubx64.efi boot/bootx64.efi\nefibootmgr -c -g -d /dev/sda -p 1 -w -L boot -l '\\\\EFI\\\\boot\\\\bootx64.efi'\nefibootmgr -n IDBOOT",
            "title": "GRUB"
        },
        {
            "location": "/linux/grub/#encryption-com-grub",
            "text": "/etc/mkinitcpio.conf\nHOOKS=(base udev autodetect keyboard keymap consolefont modconf block encrypt lvm2 filesystems fsck)  /etc/default/grub\nGRUB_CMDLINE_LINUX=\"cryptdevice=/dev/sda2:cryptroot\"\nGRUB_ENABLE_CRYPTODISK=y  mkinitcpio -p linux",
            "title": "Encryption com GRUB"
        },
        {
            "location": "/linux/scrot/",
            "text": "Scrot\n\n\nScreenshot da tela toda\n\n\nmanda para ~/imagens/shots e mostra com o gpicview\n\n\nscrot '%Y-%m-%d-%H:%M:%S_$wx$h_screenshot.png' -e 'mv $f ~/imagens/shots/; gpicview ~/imagens/shots/$f'\n\n\nSeleciona a \u00e1rea com o mouse\n\n\nscrot -s '%Y-%m-%d-%H:%M:%S_$wx$h_screenshot.png' -e 'mv $f ~/imagens/shots/; gpicview ~/imagens/shots/$f'",
            "title": "Scrot"
        },
        {
            "location": "/linux/scrot/#scrot",
            "text": "",
            "title": "Scrot"
        },
        {
            "location": "/linux/scrot/#screenshot-da-tela-toda",
            "text": "manda para ~/imagens/shots e mostra com o gpicview  scrot '%Y-%m-%d-%H:%M:%S_$wx$h_screenshot.png' -e 'mv $f ~/imagens/shots/; gpicview ~/imagens/shots/$f'",
            "title": "Screenshot da tela toda"
        },
        {
            "location": "/linux/scrot/#seleciona-a-area-com-o-mouse",
            "text": "scrot -s '%Y-%m-%d-%H:%M:%S_$wx$h_screenshot.png' -e 'mv $f ~/imagens/shots/; gpicview ~/imagens/shots/$f'",
            "title": "Seleciona a \u00e1rea com o mouse"
        },
        {
            "location": "/linux/swap/",
            "text": "Diminuindo prioridade da memoria swap\n\n\nEmbora n\u00e3o seja obrigat\u00f3ria em micros com um volume suficiente de mem\u00f3ria RAM, a parti\u00e7\u00e3o swap \u00e9 sempre recomendada, pois permite que o sistema disponha de uma \u00e1rea adicional para situa\u00e7\u00f5es onde precisa de uma quantidade muito grande de mem\u00f3ria RAM, como por exemplo ao editar v\u00eddeos.\n\n\nA propens\u00e3o do sistema a utilizar mem\u00f3ria swap \u00e9 configur\u00e1vel atrav\u00e9s de uma op\u00e7\u00e3o do kernel, a \"vm.swappiness\", que aceita valores de 0 a 100, sendo que um valor baixo orienta o sistema a usar swap apenas quando n\u00e3o houver mais mem\u00f3ria dispon\u00edvel e um valor mais alto faz com que o sistema a utilize de maneira mais liberal, movendo arquivos e bibliotecas que n\u00e3o est\u00e3o sendo usados.\n\n\nO default na maioria das distribui\u00e7\u00f5es \u00e9 \"60\", o que faz com que o sistema use um pouco de swap mesmo quando tem mem\u00f3ria de sobra dispon\u00edvel. Voc\u00ea pode evitar isso alterando o valor para \"20\" (ou menos, de acordo com o gosto do fregu\u00eas).\n\n\nPara isso, execute, como root o comando:\n\n\nsysctl vm.swappiness=20\n\n\nPara que a altera\u00e7\u00e3o se torne permanente, edite o arquivo \n/etc/sysctl.conf\n e adicione a linha \"vm.swappiness=20\". Este arquivo cont\u00e9m vari\u00e1veis para o kernel, que s\u00e3o carregadas durante o boot. \n\n\nAtiva e Desativa o Swap\n\n\nswapoff -a\n - desabilita \"todas\" as parti\u00e7\u00f5es swap em /etc/fstab\n\n\nswapon -a\n - habilita \"todas\" as parti\u00e7\u00f5es swap em /etc/fstab",
            "title": "Swap"
        },
        {
            "location": "/linux/swap/#diminuindo-prioridade-da-memoria-swap",
            "text": "Embora n\u00e3o seja obrigat\u00f3ria em micros com um volume suficiente de mem\u00f3ria RAM, a parti\u00e7\u00e3o swap \u00e9 sempre recomendada, pois permite que o sistema disponha de uma \u00e1rea adicional para situa\u00e7\u00f5es onde precisa de uma quantidade muito grande de mem\u00f3ria RAM, como por exemplo ao editar v\u00eddeos.  A propens\u00e3o do sistema a utilizar mem\u00f3ria swap \u00e9 configur\u00e1vel atrav\u00e9s de uma op\u00e7\u00e3o do kernel, a \"vm.swappiness\", que aceita valores de 0 a 100, sendo que um valor baixo orienta o sistema a usar swap apenas quando n\u00e3o houver mais mem\u00f3ria dispon\u00edvel e um valor mais alto faz com que o sistema a utilize de maneira mais liberal, movendo arquivos e bibliotecas que n\u00e3o est\u00e3o sendo usados.  O default na maioria das distribui\u00e7\u00f5es \u00e9 \"60\", o que faz com que o sistema use um pouco de swap mesmo quando tem mem\u00f3ria de sobra dispon\u00edvel. Voc\u00ea pode evitar isso alterando o valor para \"20\" (ou menos, de acordo com o gosto do fregu\u00eas).  Para isso, execute, como root o comando:  sysctl vm.swappiness=20  Para que a altera\u00e7\u00e3o se torne permanente, edite o arquivo  /etc/sysctl.conf  e adicione a linha \"vm.swappiness=20\". Este arquivo cont\u00e9m vari\u00e1veis para o kernel, que s\u00e3o carregadas durante o boot.",
            "title": "Diminuindo prioridade da memoria swap"
        },
        {
            "location": "/linux/swap/#ativa-e-desativa-o-swap",
            "text": "swapoff -a  - desabilita \"todas\" as parti\u00e7\u00f5es swap em /etc/fstab  swapon -a  - habilita \"todas\" as parti\u00e7\u00f5es swap em /etc/fstab",
            "title": "Ativa e Desativa o Swap"
        },
        {
            "location": "/linux/syslinux/",
            "text": "Syslinux\n\n\nLembrando que o syslinux deve ser montado direto na parti\u00e7\u00e3o \n/boot\n,\nporque quando o syslinux for ativar o linux ele precisa ler os arquivos \n/boot/vmlinuz-linux\n e\n\ninitramfs-linux.img\n que tem que estar disponivel antes de subir a parti\u00e7\u00e3o principal do linux\nque carrega simultanio quando usamos UEFI\n\n\npacman -S syslinux efibootmgr\nmkdir -p /boot/EFI/boot\ncp -r /usr/lib/syslinux/efi64/* /boot/EFI/boot/\nefibootmgr -c -g -d /dev/sda -p 1 -w -L boot -l '\\\\EFI\\\\boot\\\\bootx64.efi'\n\n\n\n\ne crio o arquivo \n/boot/EFI/boot/syslinux.cfg\n com o seguinte conteudo:\n\n\nPROMPT 0\nDEFAULT arch\n\nLABEL arch\n  LINUX ../../vmlinuz-linux\n  APPEND root=/dev/sda2 rw\n  INITRD ../../initramfs-linux.img\n\n\n\n\nCaso tenha a parti\u00e7\u00e3o cryptografada use o seguinte conteudo no APPEND:\n\n\nAPPEND root=/dev/mapper/cryptroot cryptdevice=/dev/sda2:cryptroot rw",
            "title": "Syslinux"
        },
        {
            "location": "/linux/syslinux/#syslinux",
            "text": "Lembrando que o syslinux deve ser montado direto na parti\u00e7\u00e3o  /boot ,\nporque quando o syslinux for ativar o linux ele precisa ler os arquivos  /boot/vmlinuz-linux  e initramfs-linux.img  que tem que estar disponivel antes de subir a parti\u00e7\u00e3o principal do linux\nque carrega simultanio quando usamos UEFI  pacman -S syslinux efibootmgr\nmkdir -p /boot/EFI/boot\ncp -r /usr/lib/syslinux/efi64/* /boot/EFI/boot/\nefibootmgr -c -g -d /dev/sda -p 1 -w -L boot -l '\\\\EFI\\\\boot\\\\bootx64.efi'  e crio o arquivo  /boot/EFI/boot/syslinux.cfg  com o seguinte conteudo:  PROMPT 0\nDEFAULT arch\n\nLABEL arch\n  LINUX ../../vmlinuz-linux\n  APPEND root=/dev/sda2 rw\n  INITRD ../../initramfs-linux.img  Caso tenha a parti\u00e7\u00e3o cryptografada use o seguinte conteudo no APPEND:  APPEND root=/dev/mapper/cryptroot cryptdevice=/dev/sda2:cryptroot rw",
            "title": "Syslinux"
        },
        {
            "location": "/linux/ubuntu/",
            "text": "Alterar Usu\u00e1rio do arquivo\n\n\nsudo chown root:root [file]\n\n\n\n\nAtalhos Desktop\n\n\nPasta adicionar os .desktop na pasta \n/usr/share/applications/\n\n\nExample de arquivo\n\n\n[Desktop Entry]\nName=Steam\nComment=Application for managing and playing games on Steam\nExec=/usr/bin/steam %U\nIcon=steam\nTerminal=false\nType=Application\nCategories=Network;FileTransfer;Game;\nMimeType=x-scheme-handler/steam;\nActions=Store;Community;Library;Servers;Screenshots;News;Settings;BigPicture;Friends;\n\n\n\n\nPesquisar por processos existentes\n\n\nps -ef | grep [pesquisa]\n\n\n\nMatar processos\n\n\nkill [idProcesso^]\n\n\n\nPara gravar ISO em pendrive:\n\n\ndd if=/local/da/imagem.iso of=/dev/sd*\n\n\n\n\nPreferencia IPV4\n\n\nsudo sh -c \"echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf\"",
            "title": "Alterar Usu\u00e1rio do arquivo"
        },
        {
            "location": "/linux/ubuntu/#alterar-usuario-do-arquivo",
            "text": "sudo chown root:root [file]",
            "title": "Alterar Usu\u00e1rio do arquivo"
        },
        {
            "location": "/linux/ubuntu/#atalhos-desktop",
            "text": "Pasta adicionar os .desktop na pasta  /usr/share/applications/  Example de arquivo  [Desktop Entry]\nName=Steam\nComment=Application for managing and playing games on Steam\nExec=/usr/bin/steam %U\nIcon=steam\nTerminal=false\nType=Application\nCategories=Network;FileTransfer;Game;\nMimeType=x-scheme-handler/steam;\nActions=Store;Community;Library;Servers;Screenshots;News;Settings;BigPicture;Friends;",
            "title": "Atalhos Desktop"
        },
        {
            "location": "/linux/ubuntu/#pesquisar-por-processos-existentes",
            "text": "ps -ef | grep [pesquisa]",
            "title": "Pesquisar por processos existentes"
        },
        {
            "location": "/linux/ubuntu/#matar-processos",
            "text": "kill [idProcesso^]",
            "title": "Matar processos"
        },
        {
            "location": "/linux/ubuntu/#para-gravar-iso-em-pendrive",
            "text": "dd if=/local/da/imagem.iso of=/dev/sd*",
            "title": "Para gravar ISO em pendrive:"
        },
        {
            "location": "/linux/ubuntu/#preferencia-ipv4",
            "text": "sudo sh -c \"echo 'precedence ::ffff:0:0/96 100' >> /etc/gai.conf\"",
            "title": "Preferencia IPV4"
        },
        {
            "location": "/php/composer/",
            "text": "Composer TimeOut\n\n\ncomposer --global config process-timeout 2000",
            "title": "Composer"
        },
        {
            "location": "/php/composer/#composer-timeout",
            "text": "composer --global config process-timeout 2000",
            "title": "Composer TimeOut"
        },
        {
            "location": "/php/doctrine/",
            "text": "Commands\n\n\nPrefixo instalado via composer: \nphp vendor/bin/doctrine *\n\n\n\n\norm:schema-tool:create\n - Create database\n\n\norm:schema-tool:drop --force\n - Delete database\n\n\norm:schema:update --dump-sql\n - Dump or update modifications\n\n\norm:validate-schema\n - Validate Entity with DataBase\n\n\norm:convert-mapping --force  --from-database annotation [path]\n - Generate entities by database\n\n\norm:generate-entities [path] --generate-annotations=true\n - Update entities and generate entities with annotations, get and set\n\n\n\n\nPersisting Usage\n\n\n- Persisting objects\n\n\n$user1 = new User();\n$user1->setFullName('MyName');\n$em->persist($user1);\n\n$user2 = new User();\n$user2->setFullName('MyName2');\n$em->persist($user2);\n\n$em->flush();\n\n\n\n\n- Updating an object\n\n\n$user = $em->find('User', 1);\n$user->setName('MyName');\n$em->flush();\n\n\n\n\n- Deleting an object\n\n\n$user = $em->find('User', 1);\n$em->remove($user);\n$em->flush();\n\n\n\n\nRetrieving an object\n\n\n- Repositories\n\n\nSingle user by id\n\n\n$user1 = $em->find('User', 1);\n$user2 = $em->getRepository('User')->find(1);\n\n\n\n\nSingle user by name and type.\n\n\n$user = $em->getRepository('User')->findOneBy(\n    array('name' => 'MyName', 'type' => 'MyType'));\n\n\n\n\nSingle user by its Name\n\n\n$user = $em->getRepository('User')->findOneByName('MyName');\n\n\n\n\nFind All users\n\n\n$users = $em->getRepository('User')->findAll();\n\n\n\n\nGroup users by type\n\n\n$users = $em->getRepository('User')->findByType('MyType');\n\n\n\n\nGroup users by criteria, order, limit, offset.\n\n\n$users = $em->getRepository('User')->findBy(\n    array('name' => 'MyName'), array('id' => 'ASC'), 10, 0);\n\n\n\n\n- DQL\n\n\n- Query Builder\n\n\nExample BETWEEN\n\n\n$queryBuilder = $em->createQueryBuilder();\n$queryBuilder->select('n')\n    ->from(Example\\Entity::class, 'n')\n    ->where('n.date BETWEEN :from AND :to')\n\n$queryBuilder->setParameters([\n    'from' => $from,\n    'to' => $to\n]);\n\n$result = $queryBuilder->getQuery()->fetchAll();\n\n\n\n\nAssociations\n\n\n- One to One\n\n\nMapping One to One\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\OneToOne(targetEntity=\"Entity\\Role\", mappedBy=\"role\", cascade={\"persist\"})\n     */\n    protected $role;\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n */\nclass Role\n{\n    /**\n     * @ORM\\OneToOne(targetEntity=\"Entity\\User\", inversedBy=\"role\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"userId\", referencedColumnName=\"id\", unique=false, nullable=false)\n     */\n    protected $user;\n}\n\n\n\n\nUsage example One to One\n\n\n//persist\n$user = new Entity\\User();\n$user->setEmail('email');\n$user->setName('name');\n\n$role = new Entity\\Role;\n$role->setName('name');\n\n$role->setUser($user);\n$user->setRole($role);\n\n$em->persist($user);\n$em->flush();\n\n//retrieving\n$user = $em->find('User', $user->getId());\n$user->getRole();\n\n\n\n\n- One to Many\n\n\nMapping One to Many\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\OneToMany(targetEntity=\"Comment\", mappedBy=\"user\", cascade={\"persist\"})\n     */\n    protected $comments;\n\n    public function __construct()\n    {\n        $this->comments = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"comment\")\n */\nclass Comment\n{\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"User\", inversedBy=\"comments\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"userId\", referencedColumnName=\"id\", unique=false, nullable=false)\n     */\n    protected $user;\n}\n\n\n\n\nUsage example One to Many\n\n\n//persist\n$user = new Entity\\User();\n$user->setEmail('email');\n$user->setName('name');\n\n$comment1 = new Entity\\Comment;\n$comment1->setCommentText('comment1');\n$comment1->setUser($user);\n$comment2 = new Entity\\Comment;\n$comment2->setCommentText('comment2');\n$comment2->setUser($user);\n\n$user->getComments()->add($comment2);\n$user->getComments()->add($comment1);\n\n$em->persist($user);\n$em->flush();\n\n//retrieving\n$user = $em->find('User', $user->getId());\n$user->getComments()->toArray();\n\n\n\n\nMapping One to Many Self Ref\n\n\nclass Comment\n{\n    /**\n     * @ORM\\OneToMany(targetEntity=\"Comment\", mappedBy=\"parent\", cascade={\"persist\"})\n     */\n    protected $children;\n\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"Comment\", inversedBy=\"children\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"parentId\", referencedColumnName=\"id\", unique=false, nullable=true)\n     */\n    protected $parent;\n\n    public function __construct()\n    {\n        $this->children = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n\n\n\nUsage example One to Many Self Ref\n\n\n// persisting\n$comment2 = new Entity\\Comment;\n$comment2->setCommentText('parent');\n\n$comment1 = new Entity\\Comment;\n$comment1->setCommentText('children1');\n$comment1->setParent($comment2);\n$comment3 = new Entity\\Comment;\n$comment3->setCommentText('children2');\n$comment3->setParent($comment2);\n\n$comment2->getChildrens()->add($comment1);\n$comment2->getChildrens()->add($comment3);\n\n$em->persist($comment2);\n$em->flush();\n\n//retrieving\n$comment = $em->find('Comment', $comment2->getId());\n$comment->getChildrens();\n\n\n\n\n- Many to Many\n\n\nMapping Many to Many\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\ManyToMany(targetEntity=\"Category\", inversedBy=\"users\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"categoryId\", referencedColumnName=\"id\", unique=false, nullable=true)\n     */\n    protected $categories;\n\n    public function __construct()\n    {\n        $this->categories = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"category\")\n */\nclass Category\n{\n    /**\n     * @ORM\\ManyToMany(targetEntity=\"User\", mappedBy=\"categories\", cascade={\"persist\"})\n     */\n    protected $users;\n\n    public function __construct()\n    {\n        $this->users = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n\n\n\nUsage example Many to Many\n\n\n// persisting\n$user1 = new Entity\\User();\n$user1->setEmail('email');\n$user1->setName('Plumber Builder');\n\n$user2 = new Entity\\User;\n$user2->setEmail('email');\n$user2->setName('Plaster Builder');\n\n$categoryPlumber = new Entity\\Category;\n$categoryPlumber->setName('Plumber Category');\n$categoryBeer_Drinkers = new Entity\\Category;\n$categoryBeer_Drinkers->setName('Beer_Drinkers Category');\n\n$categoryPlumber->getUsers()->add($user1);\n$categoryBeer_Drinkers->getUsers()->add($user2);\n$categoryBeer_Drinkers->getUsers()->add($user1);\n\n$user1->getCategories()->add($categoryPlumber);\n$user1->getCategories()->add($categoryBeer_Drinkers);\n$user2->getCategories()->add($categoryBeer_Drinkers);\n\n$em->persist($user1);\n$em->persist($user2);\n$em->flush();\n\n//retrieving\n$user1 = $em->find('User', $user1->getId());\n//get last categories for user1\n$user1->getCategories()->toArray());\n//get last category(Beer_Drinkers Category) and all users for this category\n$user1->getCategories()->last()->getUsers()->toArray();\n\n\n\n\nLifecycle callbacks\n\n\nAnnotation which has to be set on the entity-class PHP DocBlock to notify Doctrine that this entity has entity lifecycle callback annotations set on at least one of its methods. Using @PostLoad, @PrePersist, @PostPersist, @PreRemove, @PostRemove, @PreUpdate or @PostUpdate without this marker annotation will make Doctrine ignore the callbacks.\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\MappedSuperclass\n * @ORM\\HasLifecycleCallbacks\n */\nabstract class AbstractEntity\n{\n    /**\n     * @ORM\\Column(name=\"updated_at\", type=\"datetime\")\n     */\n    private $updatedAt;\n\n    /**\n     * @ORM\\PrePersist()\n     * @ORM\\PreUpdate\n     */\n    public function preUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    /**\n     * @PostPersist\n     */\n    public function sendOptinMail() {}\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User extends Abstract\n{\n    // [...]\n}\n\n\n\n\nCustom Repository\n\n\nEntity mapping for repository class\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity(repositoryClass=\"Repository\\Comment\")\n */\nclass Comment {\n    // [...]\n}\n\n//repository Class\nuse Doctrine\\ORM\\EntityRepository;\n\nclass Comment extends EntityRepository\n{\n    public function findUserComments($userId)\n    {\n        $query = $this->_em->createQuery(\"SELECT u FROM Entity\\Comment u WHERE u.userId = :userId\");\n        $query->setParameters(array('userId' => $userId));\n        return $query->getResult();\n    }\n}\n\n\n\n\nIn controller\n\n\n$repository = $em->getRepository(Entity\\Comment::class);\n$comments = $repository->findUserComments(10);\n\n\n\n\nZend Hydrator\n\n\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    // [...]\n\n    public function hydrator(array $options) : User\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function extract() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}\n\n\n\n\nMy Entities\n\n\n- Abstract Entity\n\n\nnamespace Core\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\MappedSuperclass\n * @ORM\\HasLifecycleCallbacks\n */\nabstract class AbstractEntity\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\", nullable=false)\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $created;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $updated;\n\n    public function getId() : int\n    {\n        return $this->id;\n    }\n\n    public function getCreated() : DateTime\n    {\n        return $this->created;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     */\n    public function setCreated()\n    {\n        $this->created = new \\DateTime();\n    }\n\n\n    public function getUpdated() : DateTime\n    {\n        return $this->updated;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     * @ORM\\PreUpdate\n     */\n    public function setUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    public function hydrator(array $options) : Role\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function toArray() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}\n\n\n\n\n- Snippet Entity\n\n\nnamespace App\\Entity;\n\nuse Core\\Entity\\AbstractEntity;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n */\nclass Role extends AbstractEntity\n{\n    /**\n     * @ORM\\Column(type=\"string\", length=100, nullable=false)\n     */\n    private $name;\n\n    public function setName(string $name) : Role\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    public function getName() : string\n    {\n        return $this->name;\n    }\n}\n\n\n\n\n- Snippet Entity Clean\n\n\nnamespace App\\Entity;\n\nuse DateTime;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\nuse Zend\\Math\\Rand;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n * @ORM\\HasLifecycleCallbacks\n */\nclass Role\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\", nullable=false)\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=100, nullable=false)\n     */\n    private $name;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $created;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $updated;\n\n    public function getId() : int\n    {\n        return $this->id;\n    }\n\n    public function setName(string $name) : Role\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    public function getName() : string\n    {\n        return $this->name;\n    }\n\n    public function getCreated() : DateTime\n    {\n        return $this->created;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     */\n    public function preCreated()\n    {\n        $this->created = new \\DateTime();\n    }\n\n\n    public function getUpdated() : DateTime\n    {\n        return $this->updated;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     * @ORM\\PreUpdate\n     */\n    public function preUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    public function hydrator(array $options) : Role\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function toArray() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}",
            "title": "Commands"
        },
        {
            "location": "/php/doctrine/#commands",
            "text": "Prefixo instalado via composer:  php vendor/bin/doctrine *   orm:schema-tool:create  - Create database  orm:schema-tool:drop --force  - Delete database  orm:schema:update --dump-sql  - Dump or update modifications  orm:validate-schema  - Validate Entity with DataBase  orm:convert-mapping --force  --from-database annotation [path]  - Generate entities by database  orm:generate-entities [path] --generate-annotations=true  - Update entities and generate entities with annotations, get and set",
            "title": "Commands"
        },
        {
            "location": "/php/doctrine/#persisting-usage",
            "text": "",
            "title": "Persisting Usage"
        },
        {
            "location": "/php/doctrine/#-persisting-objects",
            "text": "$user1 = new User();\n$user1->setFullName('MyName');\n$em->persist($user1);\n\n$user2 = new User();\n$user2->setFullName('MyName2');\n$em->persist($user2);\n\n$em->flush();",
            "title": "- Persisting objects"
        },
        {
            "location": "/php/doctrine/#-updating-an-object",
            "text": "$user = $em->find('User', 1);\n$user->setName('MyName');\n$em->flush();",
            "title": "- Updating an object"
        },
        {
            "location": "/php/doctrine/#-deleting-an-object",
            "text": "$user = $em->find('User', 1);\n$em->remove($user);\n$em->flush();",
            "title": "- Deleting an object"
        },
        {
            "location": "/php/doctrine/#retrieving-an-object",
            "text": "",
            "title": "Retrieving an object"
        },
        {
            "location": "/php/doctrine/#-repositories",
            "text": "",
            "title": "- Repositories"
        },
        {
            "location": "/php/doctrine/#single-user-by-id",
            "text": "$user1 = $em->find('User', 1);\n$user2 = $em->getRepository('User')->find(1);",
            "title": "Single user by id"
        },
        {
            "location": "/php/doctrine/#single-user-by-name-and-type",
            "text": "$user = $em->getRepository('User')->findOneBy(\n    array('name' => 'MyName', 'type' => 'MyType'));",
            "title": "Single user by name and type."
        },
        {
            "location": "/php/doctrine/#single-user-by-its-name",
            "text": "$user = $em->getRepository('User')->findOneByName('MyName');",
            "title": "Single user by its Name"
        },
        {
            "location": "/php/doctrine/#find-all-users",
            "text": "$users = $em->getRepository('User')->findAll();",
            "title": "Find All users"
        },
        {
            "location": "/php/doctrine/#group-users-by-type",
            "text": "$users = $em->getRepository('User')->findByType('MyType');",
            "title": "Group users by type"
        },
        {
            "location": "/php/doctrine/#group-users-by-criteria-order-limit-offset",
            "text": "$users = $em->getRepository('User')->findBy(\n    array('name' => 'MyName'), array('id' => 'ASC'), 10, 0);",
            "title": "Group users by criteria, order, limit, offset."
        },
        {
            "location": "/php/doctrine/#-dql",
            "text": "",
            "title": "- DQL"
        },
        {
            "location": "/php/doctrine/#-query-builder",
            "text": "",
            "title": "- Query Builder"
        },
        {
            "location": "/php/doctrine/#example-between",
            "text": "$queryBuilder = $em->createQueryBuilder();\n$queryBuilder->select('n')\n    ->from(Example\\Entity::class, 'n')\n    ->where('n.date BETWEEN :from AND :to')\n\n$queryBuilder->setParameters([\n    'from' => $from,\n    'to' => $to\n]);\n\n$result = $queryBuilder->getQuery()->fetchAll();",
            "title": "Example BETWEEN"
        },
        {
            "location": "/php/doctrine/#associations",
            "text": "",
            "title": "Associations"
        },
        {
            "location": "/php/doctrine/#-one-to-one",
            "text": "",
            "title": "- One to One"
        },
        {
            "location": "/php/doctrine/#mapping-one-to-one",
            "text": "use Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\OneToOne(targetEntity=\"Entity\\Role\", mappedBy=\"role\", cascade={\"persist\"})\n     */\n    protected $role;\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n */\nclass Role\n{\n    /**\n     * @ORM\\OneToOne(targetEntity=\"Entity\\User\", inversedBy=\"role\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"userId\", referencedColumnName=\"id\", unique=false, nullable=false)\n     */\n    protected $user;\n}",
            "title": "Mapping One to One"
        },
        {
            "location": "/php/doctrine/#usage-example-one-to-one",
            "text": "//persist\n$user = new Entity\\User();\n$user->setEmail('email');\n$user->setName('name');\n\n$role = new Entity\\Role;\n$role->setName('name');\n\n$role->setUser($user);\n$user->setRole($role);\n\n$em->persist($user);\n$em->flush();\n\n//retrieving\n$user = $em->find('User', $user->getId());\n$user->getRole();",
            "title": "Usage example One to One"
        },
        {
            "location": "/php/doctrine/#-one-to-many",
            "text": "",
            "title": "- One to Many"
        },
        {
            "location": "/php/doctrine/#mapping-one-to-many",
            "text": "use Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\OneToMany(targetEntity=\"Comment\", mappedBy=\"user\", cascade={\"persist\"})\n     */\n    protected $comments;\n\n    public function __construct()\n    {\n        $this->comments = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"comment\")\n */\nclass Comment\n{\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"User\", inversedBy=\"comments\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"userId\", referencedColumnName=\"id\", unique=false, nullable=false)\n     */\n    protected $user;\n}",
            "title": "Mapping One to Many"
        },
        {
            "location": "/php/doctrine/#usage-example-one-to-many",
            "text": "//persist\n$user = new Entity\\User();\n$user->setEmail('email');\n$user->setName('name');\n\n$comment1 = new Entity\\Comment;\n$comment1->setCommentText('comment1');\n$comment1->setUser($user);\n$comment2 = new Entity\\Comment;\n$comment2->setCommentText('comment2');\n$comment2->setUser($user);\n\n$user->getComments()->add($comment2);\n$user->getComments()->add($comment1);\n\n$em->persist($user);\n$em->flush();\n\n//retrieving\n$user = $em->find('User', $user->getId());\n$user->getComments()->toArray();",
            "title": "Usage example One to Many"
        },
        {
            "location": "/php/doctrine/#mapping-one-to-many-self-ref",
            "text": "class Comment\n{\n    /**\n     * @ORM\\OneToMany(targetEntity=\"Comment\", mappedBy=\"parent\", cascade={\"persist\"})\n     */\n    protected $children;\n\n    /**\n     * @ORM\\ManyToOne(targetEntity=\"Comment\", inversedBy=\"children\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"parentId\", referencedColumnName=\"id\", unique=false, nullable=true)\n     */\n    protected $parent;\n\n    public function __construct()\n    {\n        $this->children = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}",
            "title": "Mapping One to Many Self Ref"
        },
        {
            "location": "/php/doctrine/#usage-example-one-to-many-self-ref",
            "text": "// persisting\n$comment2 = new Entity\\Comment;\n$comment2->setCommentText('parent');\n\n$comment1 = new Entity\\Comment;\n$comment1->setCommentText('children1');\n$comment1->setParent($comment2);\n$comment3 = new Entity\\Comment;\n$comment3->setCommentText('children2');\n$comment3->setParent($comment2);\n\n$comment2->getChildrens()->add($comment1);\n$comment2->getChildrens()->add($comment3);\n\n$em->persist($comment2);\n$em->flush();\n\n//retrieving\n$comment = $em->find('Comment', $comment2->getId());\n$comment->getChildrens();",
            "title": "Usage example One to Many Self Ref"
        },
        {
            "location": "/php/doctrine/#-many-to-many",
            "text": "",
            "title": "- Many to Many"
        },
        {
            "location": "/php/doctrine/#mapping-many-to-many",
            "text": "use Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    /**\n     * @ORM\\ManyToMany(targetEntity=\"Category\", inversedBy=\"users\", cascade={\"persist\"})\n     * @ORM\\JoinColumn(name=\"categoryId\", referencedColumnName=\"id\", unique=false, nullable=true)\n     */\n    protected $categories;\n\n    public function __construct()\n    {\n        $this->categories = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"category\")\n */\nclass Category\n{\n    /**\n     * @ORM\\ManyToMany(targetEntity=\"User\", mappedBy=\"categories\", cascade={\"persist\"})\n     */\n    protected $users;\n\n    public function __construct()\n    {\n        $this->users = new \\Doctrine\\Common\\Collections\\ArrayCollection();\n    }\n}",
            "title": "Mapping Many to Many"
        },
        {
            "location": "/php/doctrine/#usage-example-many-to-many",
            "text": "// persisting\n$user1 = new Entity\\User();\n$user1->setEmail('email');\n$user1->setName('Plumber Builder');\n\n$user2 = new Entity\\User;\n$user2->setEmail('email');\n$user2->setName('Plaster Builder');\n\n$categoryPlumber = new Entity\\Category;\n$categoryPlumber->setName('Plumber Category');\n$categoryBeer_Drinkers = new Entity\\Category;\n$categoryBeer_Drinkers->setName('Beer_Drinkers Category');\n\n$categoryPlumber->getUsers()->add($user1);\n$categoryBeer_Drinkers->getUsers()->add($user2);\n$categoryBeer_Drinkers->getUsers()->add($user1);\n\n$user1->getCategories()->add($categoryPlumber);\n$user1->getCategories()->add($categoryBeer_Drinkers);\n$user2->getCategories()->add($categoryBeer_Drinkers);\n\n$em->persist($user1);\n$em->persist($user2);\n$em->flush();\n\n//retrieving\n$user1 = $em->find('User', $user1->getId());\n//get last categories for user1\n$user1->getCategories()->toArray());\n//get last category(Beer_Drinkers Category) and all users for this category\n$user1->getCategories()->last()->getUsers()->toArray();",
            "title": "Usage example Many to Many"
        },
        {
            "location": "/php/doctrine/#lifecycle-callbacks",
            "text": "Annotation which has to be set on the entity-class PHP DocBlock to notify Doctrine that this entity has entity lifecycle callback annotations set on at least one of its methods. Using @PostLoad, @PrePersist, @PostPersist, @PreRemove, @PostRemove, @PreUpdate or @PostUpdate without this marker annotation will make Doctrine ignore the callbacks.  use Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\MappedSuperclass\n * @ORM\\HasLifecycleCallbacks\n */\nabstract class AbstractEntity\n{\n    /**\n     * @ORM\\Column(name=\"updated_at\", type=\"datetime\")\n     */\n    private $updatedAt;\n\n    /**\n     * @ORM\\PrePersist()\n     * @ORM\\PreUpdate\n     */\n    public function preUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    /**\n     * @PostPersist\n     */\n    public function sendOptinMail() {}\n}\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User extends Abstract\n{\n    // [...]\n}",
            "title": "Lifecycle callbacks"
        },
        {
            "location": "/php/doctrine/#custom-repository",
            "text": "Entity mapping for repository class  use Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @ORM\\Entity(repositoryClass=\"Repository\\Comment\")\n */\nclass Comment {\n    // [...]\n}\n\n//repository Class\nuse Doctrine\\ORM\\EntityRepository;\n\nclass Comment extends EntityRepository\n{\n    public function findUserComments($userId)\n    {\n        $query = $this->_em->createQuery(\"SELECT u FROM Entity\\Comment u WHERE u.userId = :userId\");\n        $query->setParameters(array('userId' => $userId));\n        return $query->getResult();\n    }\n}  In controller  $repository = $em->getRepository(Entity\\Comment::class);\n$comments = $repository->findUserComments(10);",
            "title": "Custom Repository"
        },
        {
            "location": "/php/doctrine/#zend-hydrator",
            "text": "use Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\n\n/**\n * @ORM\\Entity\n * @ORM\\Table(name=\"user\")\n */\nclass User\n{\n    // [...]\n\n    public function hydrator(array $options) : User\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function extract() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}",
            "title": "Zend Hydrator"
        },
        {
            "location": "/php/doctrine/#my-entities",
            "text": "",
            "title": "My Entities"
        },
        {
            "location": "/php/doctrine/#-abstract-entity",
            "text": "namespace Core\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\MappedSuperclass\n * @ORM\\HasLifecycleCallbacks\n */\nabstract class AbstractEntity\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\", nullable=false)\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $created;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $updated;\n\n    public function getId() : int\n    {\n        return $this->id;\n    }\n\n    public function getCreated() : DateTime\n    {\n        return $this->created;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     */\n    public function setCreated()\n    {\n        $this->created = new \\DateTime();\n    }\n\n\n    public function getUpdated() : DateTime\n    {\n        return $this->updated;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     * @ORM\\PreUpdate\n     */\n    public function setUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    public function hydrator(array $options) : Role\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function toArray() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}",
            "title": "- Abstract Entity"
        },
        {
            "location": "/php/doctrine/#-snippet-entity",
            "text": "namespace App\\Entity;\n\nuse Core\\Entity\\AbstractEntity;\nuse Doctrine\\ORM\\Mapping as ORM;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n */\nclass Role extends AbstractEntity\n{\n    /**\n     * @ORM\\Column(type=\"string\", length=100, nullable=false)\n     */\n    private $name;\n\n    public function setName(string $name) : Role\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    public function getName() : string\n    {\n        return $this->name;\n    }\n}",
            "title": "- Snippet Entity"
        },
        {
            "location": "/php/doctrine/#-snippet-entity-clean",
            "text": "namespace App\\Entity;\n\nuse DateTime;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Zend\\Hydrator;\nuse Zend\\Math\\Rand;\n\n/**\n * @author Jhon Mike <developer@jhonmike.com.br>\n *\n * @ORM\\Entity\n * @ORM\\Table(name=\"role\")\n * @ORM\\HasLifecycleCallbacks\n */\nclass Role\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\"integer\", nullable=false)\n     * @ORM\\GeneratedValue(strategy=\"IDENTITY\")\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=100, nullable=false)\n     */\n    private $name;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $created;\n\n    /**\n     * @ORM\\Column(type=\"datetime\", nullable=false)\n     */\n    private $updated;\n\n    public function getId() : int\n    {\n        return $this->id;\n    }\n\n    public function setName(string $name) : Role\n    {\n        $this->name = $name;\n        return $this;\n    }\n\n    public function getName() : string\n    {\n        return $this->name;\n    }\n\n    public function getCreated() : DateTime\n    {\n        return $this->created;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     */\n    public function preCreated()\n    {\n        $this->created = new \\DateTime();\n    }\n\n\n    public function getUpdated() : DateTime\n    {\n        return $this->updated;\n    }\n\n    /**\n     * @ORM\\PrePersist\n     * @ORM\\PreUpdate\n     */\n    public function preUpdated()\n    {\n        $this->updated = new \\DateTime();\n    }\n\n    public function hydrator(array $options) : Role\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        $hydrator->hydrate($options, $this);\n        return $this;\n    }\n\n    public function toArray() : array\n    {\n        $hydrator = new Hydrator\\ClassMethods();\n        return $hydrator->extract($this);\n    }\n}",
            "title": "- Snippet Entity Clean"
        },
        {
            "location": "/php/php/",
            "text": "PHP Arch\n\n\nsudo pacman -S php php-gd php-intl php-pgsql php-mcrypt php-imap php-sqlite php-memcache\n\n\n\n\nDateTime\n\n\nnew \\DateTime();\n\n\n\n\nAdd dias no objeto\n\n\n$date->add(new \\DateInterval('P1D'));",
            "title": "Php"
        },
        {
            "location": "/php/php/#php-arch",
            "text": "sudo pacman -S php php-gd php-intl php-pgsql php-mcrypt php-imap php-sqlite php-memcache",
            "title": "PHP Arch"
        },
        {
            "location": "/php/php/#datetime",
            "text": "new \\DateTime();",
            "title": "DateTime"
        },
        {
            "location": "/php/php/#add-dias-no-objeto",
            "text": "$date->add(new \\DateInterval('P1D'));",
            "title": "Add dias no objeto"
        },
        {
            "location": "/php/phpunit/",
            "text": "Mock\n\n\nProphesize\n\n\nExample:\n\n\n$gateway = $this->prophesize(Example\\Gateway::class);\n$gateway->findAllExampleEntity(\\Prophecy\\Argument::any())->willReturn([$entity1, $entity2]);\n$service = new Example\\Service($gateway->reveal());\n// \\Prophecy\\Argument::type(\\Fiscal\\Model\\NFE::class) <-- type\n\n\n\n\nMockBuilder\n\n\nExample:\n\n\n$gateway = $this->getMockBuilder(DownloadGateway::class)\n    ->setConstructorArgs([])\n    ->setMethods(['getNFEByNumber'])\n    ->getMock();\n$gateway->expects($this->once())\n    ->method('getNFEByNumber')\n    ->willReturn([$nfe1, $nfe2]);\n\n\n\n\nMock que valida se entro no metodo e quais foram os parametros passados\n\n\n$gateway = $this->getMockBuilder(NFEGateway::class)\n    ->setMethods(['findNFEsByEmissorAndModelAndDates'])\n    ->disableOriginalConstructor()\n    ->getMock();\n$gateway->expects($this->once())\n    ->method('findNFEsByEmissorAndModelAndDates')\n    ->with(\n        $this->identicalTo($emissor),\n        $this->identicalTo($params['modelo']),\n        $this->callback(function ($from) { return $from === '2016-11-01'; }),\n        $this->callback(function ($to) { return $to === '2016-11-10'; }),\n        $this->identicalTo(20),\n        $this->identicalTo(0)\n    )\n    ->willReturn([]);\n\n\n\n\nException\n\n\n/**\n * @expectedException MyException\n * @expectedExceptionCode 20\n * @expectedExceptionMessage Some Message\n */\npublic function testExceptionHasErrorcode20()\n{\n    throw new MyException('Some Message', 20);\n}",
            "title": "Mock"
        },
        {
            "location": "/php/phpunit/#mock",
            "text": "",
            "title": "Mock"
        },
        {
            "location": "/php/phpunit/#prophesize",
            "text": "Example:  $gateway = $this->prophesize(Example\\Gateway::class);\n$gateway->findAllExampleEntity(\\Prophecy\\Argument::any())->willReturn([$entity1, $entity2]);\n$service = new Example\\Service($gateway->reveal());\n// \\Prophecy\\Argument::type(\\Fiscal\\Model\\NFE::class) <-- type",
            "title": "Prophesize"
        },
        {
            "location": "/php/phpunit/#mockbuilder",
            "text": "Example:  $gateway = $this->getMockBuilder(DownloadGateway::class)\n    ->setConstructorArgs([])\n    ->setMethods(['getNFEByNumber'])\n    ->getMock();\n$gateway->expects($this->once())\n    ->method('getNFEByNumber')\n    ->willReturn([$nfe1, $nfe2]);  Mock que valida se entro no metodo e quais foram os parametros passados  $gateway = $this->getMockBuilder(NFEGateway::class)\n    ->setMethods(['findNFEsByEmissorAndModelAndDates'])\n    ->disableOriginalConstructor()\n    ->getMock();\n$gateway->expects($this->once())\n    ->method('findNFEsByEmissorAndModelAndDates')\n    ->with(\n        $this->identicalTo($emissor),\n        $this->identicalTo($params['modelo']),\n        $this->callback(function ($from) { return $from === '2016-11-01'; }),\n        $this->callback(function ($to) { return $to === '2016-11-10'; }),\n        $this->identicalTo(20),\n        $this->identicalTo(0)\n    )\n    ->willReturn([]);",
            "title": "MockBuilder"
        },
        {
            "location": "/php/phpunit/#exception",
            "text": "/**\n * @expectedException MyException\n * @expectedExceptionCode 20\n * @expectedExceptionMessage Some Message\n */\npublic function testExceptionHasErrorcode20()\n{\n    throw new MyException('Some Message', 20);\n}",
            "title": "Exception"
        },
        {
            "location": "/php/zend/",
            "text": "",
            "title": "Zend"
        },
        {
            "location": "/terminais/tmux/",
            "text": "TMUX\n\n\nquando ler <Prefix> ser\u00e1 o padr\u00e3o Ctrl + b\n\n\n\nWindow\n\n\n<Prefix> c => para criar uma nova 'window'\n<Prefix> % => para dividir uma 'window' verticalmente\n<Prefix> \" => para dividir uma 'window' horizontalmente\n<Prefix> & => para fechar uma 'window'\n<Prefix> . => move a window para algum indice ainda n\u00e3o utilizado\n<Prefix> 0 a 9 => abre a 'window' com o numero digitado\n<Prefix> w => abre a 'window' a partir de uma lista\n<Prefix> n => (next) abre a pr\u00f3xima 'window'\n<Prefix> p => (previous) abre a 'window' anterior\n\n\n\nPane (split window)\n\n\n<Prefix> x => para fechar uma 'pane', pergunta de confirma\u00e7\u00e3o\n<Prefix> ! => para fechar uma 'pane', SEM pergunta de confirma\u00e7\u00e3o\n<Prefix> o => para ir para a proxima 'pane'\n<Prefix> Up ou Left ou Right ou Down => para ir para a 'pane' 'apontada'\n<Prefix> z => maximiza a 'pane' atual, se executar novamente volta a exibir as outras\n<Prefix> { ou } => mover 'pane' de lugar\n<Prefix> ; => alterana para a ultima pane\n<Prefix> Alt(segura) setas; => redimensiona o tamanho da pane\n\n\n\nCommands\n\n\n<Prefix> : => para digitar o comando a ser executado, ex: 'kill-window'\n<Prefix> f => procura o termo em todas as 'window' e 'panes'\n<Prefix> d => 'destaca' da sess\u00e3o, mas mantem a sess\u00e3o aberta\n<Prefix> ? => exibe uma lista de comandos que podem ser utilizados\n\n\n\nSessions\n\n\npara listar sess\u00f5es:\n\n\ntmux list-sessions\n\n\npara retornar a uma sess\u00e3o aberta:\n\n\ntmux attach -t 0  #=> Ou o nome da sess\u00e3o\n\n\npara destruir uma session:\n\n\ntmux kill-session -t 0  #=> Ou o nome da sess\u00e3o\n\n\npara destruir TODAS as sess\u00f5es abertas:\n\n\ntmux kill-server\n\n\npara criar uma nova sess\u00e3o (new-session ou alias new):\n\n\ntmux new -s nome-da-sess",
            "title": "TMUX"
        },
        {
            "location": "/terminais/tmux/#tmux",
            "text": "quando ler <Prefix> ser\u00e1 o padr\u00e3o Ctrl + b",
            "title": "TMUX"
        },
        {
            "location": "/terminais/tmux/#window",
            "text": "<Prefix> c => para criar uma nova 'window'\n<Prefix> % => para dividir uma 'window' verticalmente\n<Prefix> \" => para dividir uma 'window' horizontalmente\n<Prefix> & => para fechar uma 'window'\n<Prefix> . => move a window para algum indice ainda n\u00e3o utilizado\n<Prefix> 0 a 9 => abre a 'window' com o numero digitado\n<Prefix> w => abre a 'window' a partir de uma lista\n<Prefix> n => (next) abre a pr\u00f3xima 'window'\n<Prefix> p => (previous) abre a 'window' anterior",
            "title": "Window"
        },
        {
            "location": "/terminais/tmux/#pane-split-window",
            "text": "<Prefix> x => para fechar uma 'pane', pergunta de confirma\u00e7\u00e3o\n<Prefix> ! => para fechar uma 'pane', SEM pergunta de confirma\u00e7\u00e3o\n<Prefix> o => para ir para a proxima 'pane'\n<Prefix> Up ou Left ou Right ou Down => para ir para a 'pane' 'apontada'\n<Prefix> z => maximiza a 'pane' atual, se executar novamente volta a exibir as outras\n<Prefix> { ou } => mover 'pane' de lugar\n<Prefix> ; => alterana para a ultima pane\n<Prefix> Alt(segura) setas; => redimensiona o tamanho da pane",
            "title": "Pane (split window)"
        },
        {
            "location": "/terminais/tmux/#commands",
            "text": "<Prefix> : => para digitar o comando a ser executado, ex: 'kill-window'\n<Prefix> f => procura o termo em todas as 'window' e 'panes'\n<Prefix> d => 'destaca' da sess\u00e3o, mas mantem a sess\u00e3o aberta\n<Prefix> ? => exibe uma lista de comandos que podem ser utilizados",
            "title": "Commands"
        },
        {
            "location": "/terminais/tmux/#sessions",
            "text": "para listar sess\u00f5es:  tmux list-sessions  para retornar a uma sess\u00e3o aberta:  tmux attach -t 0  #=> Ou o nome da sess\u00e3o  para destruir uma session:  tmux kill-session -t 0  #=> Ou o nome da sess\u00e3o  para destruir TODAS as sess\u00f5es abertas:  tmux kill-server  para criar uma nova sess\u00e3o (new-session ou alias new):  tmux new -s nome-da-sess",
            "title": "Sessions"
        }
    ]
}